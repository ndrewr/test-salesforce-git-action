on:
  push:
    branches:
      - master
      - dev

jobs:
  authenticate_to_prod:
    runs-on: ubuntu-latest
    name: Run unit tests
    steps:
      # Using v2 in this example ensures you're using a stable version of the checkout action.
      - name: Checkout
        uses: actions/checkout@v2

      # Copy prod-auth-url-enc in src to a temp env var
      - name: Prepare environment
        # run: test -f prod_auth_url.txt.enc && AUTH_URL_ENC=$(<prod_auth_url.txt.enc) || AUTH_URL_ENC=false && echo $AUTH_URL_ENC
        run: test -f prod_auth_url.txt.enc && echo ::set-env name=AUTH_URL_ENC::$(<prod_auth_url.txt.enc) || echo ::set-env name=AUTH_URL_ENC::false && echo $AUTH_URL_ENC

      - name: Lets check env var
        run: echo "what is the env var value..." $AUTH_URL_ENC

      - name: Auth to prod org
        if: env.AUTH_URL_ENC != 'false'

        id: ci-validate-prod
        uses: ./.github/actions/ci-validate-prod
        # id: prod-check-deploy
        # uses: tythonco/actions-sfdx/prod-check-deploy@prod-check-deploy

        with:
          auth-file-key: ${{ secrets.AUTH_FILE_KEY }}

          # auth-url-enc: ${{ env.AUTH_URL_ENC }}

      - name: Auth Success
        if: success()
        run: echo "Authentication to Prod org succeeded!"
      - name: Backup step
        if: failure()
        run: echo "There was issue with the 'validate' action!"
